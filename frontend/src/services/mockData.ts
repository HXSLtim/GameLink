import type {
  Order,
  OrderDetail,
  OrderLog,
  OrderReview,
  OrderStatistics,
} from '../types/order.types';
import {
  OrderStatus,
  ReviewStatus,
  GameType,
  ServiceType,
  OrderActionType,
} from '../types/order.types';

// Mock 订单数据
export const mockOrders: Order[] = [
  {
    id: '1',
    orderNo: 'ORD20250101001',
    user: {
      id: 'u1',
      username: '张三',
      avatar: '',
      phone: '138****8888',
    },
    player: {
      id: 'p1',
      username: '游戏高手',
      avatar: '',
      rating: 4.8,
      completedOrders: 356,
      level: 5,
      tags: ['专业', '准时', '技术好'],
    },
    gameType: GameType.HONOR_OF_KINGS,
    serviceType: ServiceType.ACCOMPANY,
    status: OrderStatus.PENDING_REVIEW,
    reviewStatus: ReviewStatus.PENDING,
    price: 88.0,
    duration: 2,
    description: '王者荣耀陪玩2小时',
    requirements: '段位钻石以上，声音好听',
    screenshots: [],
    createdAt: '2025-01-01 10:30:00',
    updatedAt: '2025-01-01 14:30:00',
    paidAt: '2025-01-01 10:35:00',
    acceptedAt: '2025-01-01 10:40:00',
    startedAt: '2025-01-01 12:00:00',
  },
  {
    id: '2',
    orderNo: 'ORD20250101002',
    user: {
      id: 'u2',
      username: '李四',
      avatar: '',
    },
    player: {
      id: 'p2',
      username: '代练小王子',
      avatar: '',
      rating: 4.9,
      completedOrders: 523,
      level: 6,
      tags: ['效率高', '稳定', '价格合理'],
    },
    gameType: GameType.LEAGUE_OF_LEGENDS,
    serviceType: ServiceType.BOOST,
    status: OrderStatus.IN_PROGRESS,
    price: 150.0,
    duration: 5,
    description: '英雄联盟代练黄金到钻石',
    requirements: '不能暴露代练身份',
    createdAt: '2025-01-02 09:00:00',
    updatedAt: '2025-01-02 09:30:00',
    paidAt: '2025-01-02 09:05:00',
    acceptedAt: '2025-01-02 09:15:00',
    startedAt: '2025-01-02 09:20:00',
  },
  {
    id: '3',
    orderNo: 'ORD20250103001',
    user: {
      id: 'u3',
      username: '王五',
      avatar: '',
    },
    gameType: GameType.GENSHIN_IMPACT,
    serviceType: ServiceType.ENTERTAINMENT,
    status: OrderStatus.PENDING_ACCEPT,
    price: 60.0,
    duration: 1,
    description: '原神休闲娱乐1小时',
    requirements: '会聊天就行',
    createdAt: '2025-01-03 15:20:00',
    updatedAt: '2025-01-03 15:20:00',
    paidAt: '2025-01-03 15:22:00',
  },
  {
    id: '4',
    orderNo: 'ORD20250104001',
    user: {
      id: 'u4',
      username: '赵六',
      avatar: '',
    },
    player: {
      id: 'p3',
      username: '上分大神',
      avatar: '',
      rating: 5.0,
      completedOrders: 789,
      level: 7,
      tags: ['技术一流', '态度好', '口碑好'],
    },
    gameType: GameType.PEACEKEEPER_ELITE,
    serviceType: ServiceType.RANK_UP,
    status: OrderStatus.COMPLETED,
    reviewStatus: ReviewStatus.APPROVED,
    price: 200.0,
    duration: 3,
    description: '和平精英上分至王牌',
    createdAt: '2024-12-28 08:00:00',
    updatedAt: '2024-12-28 12:00:00',
    paidAt: '2024-12-28 08:05:00',
    acceptedAt: '2024-12-28 08:10:00',
    startedAt: '2024-12-28 09:00:00',
    completedAt: '2024-12-28 12:00:00',
  },
  {
    id: '5',
    orderNo: 'ORD20250104002',
    user: {
      id: 'u5',
      username: '孙七',
      avatar: '',
    },
    gameType: GameType.HONOR_OF_KINGS,
    serviceType: ServiceType.ACCOMPANY,
    status: OrderStatus.CANCELLED,
    price: 88.0,
    duration: 2,
    description: '王者荣耀陪玩2小时',
    requirements: '女生优先',
    createdAt: '2025-01-04 16:00:00',
    updatedAt: '2025-01-04 16:05:00',
    cancelledAt: '2025-01-04 16:05:00',
  },
];

// Mock 订单日志
export const mockOrderLogs: OrderLog[] = [
  {
    id: 'log1',
    orderId: '1',
    action: OrderActionType.CREATE,
    operator: '张三',
    operatorId: 'u1',
    operatorRole: 'user',
    content: '创建订单',
    statusAfter: OrderStatus.PENDING_PAYMENT,
    createdAt: '2025-01-01 10:30:00',
  },
  {
    id: 'log2',
    orderId: '1',
    action: OrderActionType.PAY,
    operator: '张三',
    operatorId: 'u1',
    operatorRole: 'user',
    content: '支付订单',
    statusBefore: OrderStatus.PENDING_PAYMENT,
    statusAfter: OrderStatus.PENDING_ACCEPT,
    createdAt: '2025-01-01 10:35:00',
  },
  {
    id: 'log3',
    orderId: '1',
    action: OrderActionType.ACCEPT,
    operator: '游戏高手',
    operatorId: 'p1',
    operatorRole: 'player',
    content: '接单成功',
    statusBefore: OrderStatus.PENDING_ACCEPT,
    statusAfter: OrderStatus.IN_PROGRESS,
    createdAt: '2025-01-01 10:40:00',
  },
  {
    id: 'log4',
    orderId: '1',
    action: OrderActionType.START,
    operator: '游戏高手',
    operatorId: 'p1',
    operatorRole: 'player',
    content: '开始服务',
    createdAt: '2025-01-01 12:00:00',
  },
  {
    id: 'log5',
    orderId: '1',
    action: OrderActionType.COMPLETE,
    operator: '游戏高手',
    operatorId: 'p1',
    operatorRole: 'player',
    content: '完成服务',
    statusBefore: OrderStatus.IN_PROGRESS,
    statusAfter: OrderStatus.PENDING_REVIEW,
    createdAt: '2025-01-01 14:30:00',
  },
];

// Mock 订单审核记录
export const mockOrderReviews: OrderReview[] = [
  {
    id: 'review1',
    orderId: '1',
    reviewer: '系统管理员',
    reviewerId: 'admin1',
    status: ReviewStatus.PENDING,
    screenshots: [],
    createdAt: '2025-01-01 14:30:00',
    updatedAt: '2025-01-01 14:30:00',
  },
];

// Mock 统计数据
export const mockStatistics: OrderStatistics = {
  total: 1234,
  pendingPayment: 23,
  pendingReview: 45,
  inProgress: 67,
  completed: 1089,
  cancelled: 10,
  todayOrders: 89,
  todayRevenue: 12580.5,
};

// 获取订单详情（包含日志和审核记录）
export const getOrderDetail = (orderId: string): OrderDetail | undefined => {
  const order = mockOrders.find((o) => o.id === orderId);
  if (!order) return undefined;

  return {
    ...order,
    logs: mockOrderLogs.filter((log) => log.orderId === orderId),
    reviews: mockOrderReviews.filter((review) => review.orderId === orderId),
  };
};
